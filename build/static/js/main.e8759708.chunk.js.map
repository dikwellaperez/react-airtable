{"version":3,"sources":["pages/Home.js","pages/ViewPage.js","actions/index.js","pages/AdminPage.js","App.js","reducers/index.js","config.js","sagas/index.js","store.js","reportWebVitals.js","index.js"],"names":["Home","className","View","id","useParams","items","useSelector","state","useState","status","setStatus","useEffect","index","findIndex","it","complete","LOAD_ITEMS","RENDER_ITEMS","UPDATE_RENDER_ITEM_START","UPDATE_RENDER_ITEM_SUCCESS","updateItem","record","type","Admin","dispatch","useDispatch","Object","assign","onChange","checked","checkedIcon","uncheckedIcon","onColor","offColor","App","exact","path","component","ViewPage","AdminPage","initialState","AIRTABLE_BASE","AIRTABLE_TABLE","AIRTABLE_API_KEY","fetchToDoList","updateRecord","rootSaga","updateRecordData","fetch","recordId","method","headers","body","JSON","stringify","endpoint","call","response","json","data","put","records","action","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","map","item","fields","adminId","newItems","slice","applyMiddleware","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8759708.chunk.js","sourcesContent":["function Home() {\n  return (\n    <div className=\"home page\">\n      &nbsp;\n    </div>  \n  );\n}\n\nexport default Home;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nfunction View() {\n  const { id } = useParams();\n  const items = useSelector(state => state.items)\n  const [status, setStatus] = useState(false)\n\n  useEffect(() => {\n    const index = items.findIndex(it => it.id === id)\n    if (index > 0) {\n      setStatus(items[index].complete)\n    }\n  }, [items]);\n\n  return (\n    <div className=\"view page\">\n      <div className=\"content\">\n        <h1>{status ? 'YES' : 'NO'}</h1>\n      </div>\n    </div>  \n  );\n}\n\nexport default View;\n","// ... ADD_TODO ...\nexport const LOAD_ITEMS = 'LOAD_ITEMS';\nexport const RENDER_ITEMS = 'RENDER_ITEMS';\nexport const UPDATE_RENDER_ITEM_START = 'UPDATE_RENDER_ITEM_START';\nexport const UPDATE_RENDER_ITEM_SUCCESS = 'UPDATE_RENDER_ITEM_SUCCESS';\n\n// ... addToDo ...\n\nexport function loadItems() {\n  return {\n    type: LOAD_ITEMS\n  };\n}\n\nexport function updateItem(record) {\n  return {\n    type: UPDATE_RENDER_ITEM_START,\n    record,\n  };\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react'\nimport Switch from 'react-switch'\nimport { Link, useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateItem } from '../actions';\n\nfunction Admin() {\n  const { id } = useParams();\n  const items = useSelector(state => state.items)\n  const dispatch = useDispatch()\n  const index = items.findIndex(it => it.id === id)\n  const [status, setStatus] = useState(false)\n\n  useEffect(() => {\n    const index = items.findIndex(it => it.id === id)\n    if (index > 0) {\n      setStatus(items[index].complete)\n      const record = Object.assign({}, items[index]);\n      if (record && !status) {\n        record.complete = !status;\n        dispatch(updateItem(record));\n      }\n    }\n  }, [items]);\n\n  const changeStatus = () => {\n    const record = Object.assign({}, items[index]);\n    record.complete = !status;\n    dispatch(updateItem(record));\n  }\n\n  return (\n    <div className=\"admin page\">\n      <div className=\"content\">\n        <Switch\n          onChange={changeStatus}\n          checked={status}\n          checkedIcon={false}\n          uncheckedIcon={false}\n          onColor={'#30ba9f'}\n          offColor={'#a8b8ba'}\n        />\n        <h1>{status ? 'YES' : 'NO'}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport ViewPage from './pages/ViewPage';\nimport AdminPage from './pages/AdminPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:id\" component={ViewPage} />\n      <Route exact path=\"/:id/:adminId\" component={AdminPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","/* eslint-disable default-case */\nimport { RENDER_ITEMS, UPDATE_RENDER_ITEM_SUCCESS } from '../actions';\n\n// ... initialState ...\nconst initialState = {\n  items: [],\n}\n\nexport default function toDoApp(state = initialState, action) {\n  switch (action.type) {\n    case RENDER_ITEMS:\n      return {\n        ...state,\n        items: action.items.map((item) => ({\n          recordId: item.id,\n          id: item.fields['ID'],\n          adminId: item.fields['Admin ID'],\n          complete: item.fields['Complete']\n        }))\n      };\n    case UPDATE_RENDER_ITEM_SUCCESS:\n      const newItems = state.items.slice()\n      const index = newItems.findIndex(it => it.recordId === action.record.id)\n      newItems[index]['complete'] = action.record.fields['Complete']\n      return {\n        ...state,\n        items: newItems,\n      }\n    default:\n      return state;\n  }\n}\n","export const AIRTABLE_BASE = 'app3JojvtMHDtiJ4g';\nexport const AIRTABLE_TABLE = 'Codes';\nexport const AIRTABLE_API_KEY = 'key9Iig4errffnrw2';\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { LOAD_ITEMS, RENDER_ITEMS, UPDATE_RENDER_ITEM_START, UPDATE_RENDER_ITEM_SUCCESS } from '../actions';\nimport { AIRTABLE_API_KEY, AIRTABLE_TABLE, AIRTABLE_BASE } from '../config';\n\nconst updateRecordData = (record) => {\n  return fetch(`https://api.airtable.com/v0/${AIRTABLE_BASE}/${AIRTABLE_TABLE}/${record.recordId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${AIRTABLE_API_KEY}`\n    },\n    body: JSON.stringify({\n      'fields': {\n        \"Complete\": record.complete\n      }\n    })\n  })\n}\n\nexport function* fetchToDoList() {\n  const endpoint = `https://api.airtable.com/v0/${AIRTABLE_BASE}/${AIRTABLE_TABLE}?api_key=${AIRTABLE_API_KEY}`;\n  const response = yield call(fetch, endpoint);\n  const data = yield response.json();\n  yield put({ type: RENDER_ITEMS, items: data.records });\n}\n\nexport function* updateRecord(action) {\n  const response = yield call(updateRecordData, action.record);\n  const data = yield response.json();\n  yield put({ type: UPDATE_RENDER_ITEM_SUCCESS, record: data });\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(LOAD_ITEMS, fetchToDoList),\n    takeLatest(UPDATE_RENDER_ITEM_START, updateRecord),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { loadItems } from './actions';\n\nimport toDoApp from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(toDoApp, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nstore.dispatch(loadItems());\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}